{:rename-macros {}, :renames {}, :externs {Object {}}, :use-macros {go cljs.core.async.macros}, :excludes #{}, :name four-thirty-three-core.uploader, :imports nil, :requires {a cljs.core.async, cljs.core.async cljs.core.async, p four-thirty-three-core.protocols, four-thirty-three-core.protocols four-thirty-three-core.protocols, t cljs-time.core, cljs-time.core cljs-time.core, tc cljs-time.coerce, cljs-time.coerce cljs-time.coerce}, :uses nil, :defs {init-uploader-loop {:protocol-inline nil, :meta {:file "/Users/brendendoyle/Development/four-thirty-three-core/src/four_thirty_three_core/uploader.cljs", :line 8, :column 7, :end-line 8, :end-column 25, :arglists (quote ([recordings<]))}, :name four-thirty-three-core.uploader/init-uploader-loop, :variadic false, :file "/Users/brendendoyle/Development/four-thirty-three-core/src/four_thirty_three_core/uploader.cljs", :end-column 25, :method-params ([recordings<]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([recordings<]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :recur}, :order [:recur :else]}, :doc nil}